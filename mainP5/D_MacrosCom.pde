public void com1() {
  c1(r08[0], r08[1], r08[2], r08[3], r08[4], r08[5], true);
  c1(r16[0], r16[1], r16[2], r16[3], r16[4], r16[5], true);
  if (tmpDist > 100) {
    c1(r18[0], r18[1], r18[2], r18[3], r18[4], r18[5], true);
  }
}
public void com2() {
  c1(r06a[0], r06a[1], r06a[2], r06a[3], r06a[4], r06a[5], true);
  c1(r07[0], r07[1], r07[2], r07[3], r07[4], r07[5], true);
  c1(r11[0], r11[1], r11[2], r11[3], r11[4], r11[5], true);
  c1(r14[0], r14[1], r14[2], r14[3], r14[4], r14[5], true);
  if (tmpDist > 200) {
    c1(r15[0], r15[1], r15[2], r15[3], r15[4], r15[5], true);
  }
}
public void com3() {
  c1(r03[0], r03[1], r03[2], r03[3], r03[4], r03[5], true);
  c1(r12[0], r12[1], r12[2], r12[3], r12[4], r12[5], true);
  c1(r13[0], r13[1], r13[2], r13[3], r13[4], r13[5], true);
  c1(r17[0], r17[1], r17[2], r17[3], r17[4], r17[5], true);
  if (tmpDist > 300) {
    c1(r19[0], r19[1], r19[2], r19[3], r19[4], r19[5], true);
    c1(r20[0], r20[1], r20[2], r20[3], r20[4], r20[5], true);
  }
}
public void com4() {
  c4(r01[0], r01[0], r01[2], r01[2], r01[4], r01[4], true, 2);
  c4(r03[0], r03[0], r03[2], r03[2], r03[4], r03[4], true, 2);
  c4(r11[0], r11[0], r11[2], r11[2], r11[4], r11[4], true, 4);
  c4(r15[0], r15[0], r15[2], r15[2], r15[4], r15[4], true, 4);
  c4(r18[0], r18[0], r18[2], r18[2], r18[4], r18[4], true, 3);
  if (control > 460) {
    c4(r07[0], r07[0], r07[2], r07[2], r07[4], r07[4], true, 2);
    c4(r12[0], r12[0], r12[2], r12[2], r12[4], r12[4], true, 4);
    c4(r13[0], r13[0], r13[2], r13[2], r13[4], r13[4], true, 3);
    c4(r17[0], r17[0], r17[2], r17[2], r17[4], r17[4], true, 1);
    c4(r27a[0], r27a[0], r27a[2], r27a[2], r27a[4], r27a[4], true, 1);
    c4(r27b[0], r27b[0], r27b[2], r27b[2], r27b[4], r27b[4], true, 1);
  }
  if (control > 520) {
    c4(r04[0], r04[0], r04[2], r04[2], r04[4], r04[4], true, 2);
    c4(r08[0], r08[0], r08[2], r08[2], r08[4], r08[4], true, 3);
    c4(r14[0], r14[0], r14[2], r14[2], r14[4], r14[4], true, 3);
    c4(r23[0], r23[0], r23[2], r23[2], r23[4], r23[4], true, 1);
    c4(r24[0], r24[0], r24[2], r24[2], r24[4], r24[4], true, 3);
    c4(r26[0], r26[0], r26[2], r26[2], r26[4], r26[4], true, 2);
  }
  if (control > 580) {
    c4(r05[0], r05[0], r05[2], r05[2], r05[4], r05[4], true, 1);
    c4(r09[0], r09[0], r09[2], r09[2], r09[4], r09[4], true, 3);
    c4(r10[0], r10[0], r10[2], r10[2], r10[4], r10[4], true, 4);
    c4(r16[0], r16[0], r16[2], r16[2], r16[4], r16[4], true, 3);
    c4(r19[0], r19[0], r19[2], r19[2], r19[4], r19[4], true, 3);
    c4(r20[0], r20[0], r20[2], r20[2], r20[4], r20[4], true, 2);
    c4(r21[0], r21[0], r21[2], r21[2], r21[4], r21[4], true, 2);
    c4(r22[0], r22[0], r22[2], r22[2], r22[4], r22[4], true, 2);
  }
  if (control > 640) {
    c4(r05[0], r05[0], r05[2], r05[2], r05[4], r05[4], true, 3);
    c4(r06a[0], r06a[0], r06a[2], r06a[2], r06a[4], r06a[4], true, 2);
    c4(r06b[0], r06b[0], r06b[2], r06b[2], r06b[4], r06b[4], true, 2);
  }
}
public void com5() {
  c3(r01[0], r01[1], r01[2], r01[3], r01[4], r01[5], abs((int)map(sopDist, -30, 50, 8, 30)));
  if (control > 820) {
    c3(r02[0], r02[1], r02[2], r02[3], r02[4], r02[5], abs((int)map(sopDist, -30, 50, 8, 10)));
  }
  if (control > 830) {
    c3(r03[0], r03[1], r03[2], r03[3], r03[4], r03[5], abs((int)map(sopDist, -30, 50, 10, 15)));
  }
  if (control > 840) {
    c3(r04[0], r04[1], r04[2], r04[3], r04[4], r04[5], abs((int)map(sopDist, -30, 50, 2, 25)));
  }
  if (control > 850) {
    c3(r05[0], r05[1], r05[2], r05[3], r05[4], r05[5], abs((int)map(sopDist, -30, 50, 2, 30)));
  }
  if (control > 880) {
    c3(r06a[0], r06a[1], r06a[2], r06a[3], r06a[4], r06a[5], abs((int)map(sopDist, -30, 50, 3, 20)));
  }
  if (control > 900) {
    c3(r06b[0], r06b[1], r06b[2], r06b[3], r06b[4], r06b[5], abs((int)map(sopDist, -30, 50, 3, 15)));
  }
  if (control > 920) {  
    c3(r07[0], r07[1], r07[2], r07[3], r07[4], r07[5], abs((int)map(sopDist, -30, 50, 10, 15)));
  }
  if (control > 940) {
    c3(r08[0], r08[1], r08[2], r08[3], r08[4], r08[5], abs((int)map(sopDist, -30, 50, 2, 25)));
  }
  if (control > 960) {
    c3(r09[0], r09[1], r09[2], r09[3], r09[4], r09[5], abs((int)map(sopDist, -30, 50, 2, 30)));
  }
  if (control > 990) {
    c3(r10[0], r10[1], r10[2], r10[3], r10[4], r10[5], abs((int)map(sopDist, -30, 50, 3, 20)));
  }
  if (control > 1000) {
    c3(r11[0], r11[1], r11[2], r11[3], r11[4], r11[5], abs((int)map(sopDist, -30, 50, 3, 15)));
  }
  if (control > 1010) {
    c3(r12[0], r12[1], r12[2], r12[3], r12[4], r12[5], abs((int)map(sopDist, -30, 50, 10, 15)));
  }
  if (control > 1020) {
    c3(r13[0], r13[1], r13[2], r13[3], r13[4], r13[5], abs((int)map(sopDist, -30, 50, 2, 25)));
  }
  if (control > 1030) {  
    c3(r14[0], r14[1], r14[2], r14[3], r14[4], r14[5], abs((int)map(sopDist, -30, 50, 2, 30)));
  }
  if (control > 1040) {
    c3(r15[0], r15[1], r15[2], r15[3], r15[4], r15[5], abs((int)map(sopDist, -30, 50, 3, 20)));
    c3(r16[0], r16[1], r16[2], r16[3], r16[4], r16[5], abs((int)map(sopDist, -30, 50, 3, 15)));
  }
  if (control > 1060) {
    c3(r17[0], r17[1], r17[2], r17[3], r17[4], r17[5], abs((int)map(sopDist, -30, 50, 10, 15)));
    c3(r18[0], r18[1], r18[2], r18[3], r18[4], r18[5], abs((int)map(sopDist, -30, 50, 2, 25)));
  }
  if (control > 1080) {
    c3(r19[0], r19[1], r19[2], r19[3], r19[4], r19[5], abs((int)map(sopDist, -30, 50, 2, 30)));
    c3(r20[0], r20[1], r20[2], r20[3], r20[4], r20[5], abs((int)map(sopDist, -30, 50, 10, 15)));
  }
  if (control > 1090) {
    c3(r21[0], r21[1], r21[2], r21[3], r21[4], r21[5], abs((int)map(sopDist, -30, 50, 2, 25)));
    c3(r22[0], r22[1], r22[2], r22[3], r22[4], r22[5], abs((int)map(sopDist, -30, 50, 2, 30)));
  }
  if (control > 1100) {
    c3(r23[0], r23[1], r23[2], r23[3], r23[4], r23[5], abs((int)map(sopDist, -30, 50, 2, 30)));
  }
  if (control > 1110) {
    c3(r24[0], r24[1], r24[2], r24[3], r24[4], r24[5], abs((int)map(sopDist, -30, 50, 10, 15)));
  }
  if (control > 1120) {
    c3(r26[0], r26[1], r26[2], r26[3], r26[4], r26[5], abs((int)map(sopDist, -30, 50, 2, 25)));
  }
  if (control > 1140) {
    c3(r27a[0], r27a[1], r27a[2], r27a[3], r27a[4], r27a[5], abs((int)map(sopDist, -30, 50, 2, 30)));
  }
  if (control > 1160) {
    c3(r27b[0], r27b[1], r27b[2], r27b[3], r27b[4], r27b[5], abs((int)map(sopDist, -30, 50, 2, 30)));
  }
}

public void mPrueba() {
  prueba(r01[0], r01[1], r01[2], r01[3], r01[4], r01[5], true);
  prueba(r02[0], r02[1], r02[2], r02[3], r02[4], r02[5], true);
  prueba(r03[0], r03[1], r03[2], r03[3], r03[4], r03[5], true);
  prueba(r04[0], r04[1], r04[2], r04[3], r04[4], r04[5], true);
  prueba(r05[0], r05[1], r05[2], r05[3], r05[4], r05[5], true);
  prueba(r06a[0], r06a[1], r06a[2], r06a[3], r06a[4], r06a[5], true);
  prueba(r06b[0], r06b[1], r06b[2], r06b[3], r06b[4], r06b[5], true);
  prueba(r07[0], r07[1], r07[2], r07[3], r07[4], r07[5], true);
  prueba(r08[0], r08[1], r08[2], r08[3], r08[4], r08[5], true);
  prueba(r09[0], r09[1], r09[2], r09[3], r09[4], r09[5], true);
  prueba(r10[0], r10[1], r10[2], r10[3], r10[4], r10[5], true);
  prueba(r11[0], r11[1], r11[2], r11[3], r11[4], r11[5], true);
  prueba(r12[0], r12[1], r12[2], r12[3], r12[4], r12[5], true);
  prueba(r13[0], r13[1], r13[2], r13[3], r13[4], r13[5], true);
  prueba(r14[0], r14[1], r14[2], r14[3], r14[4], r14[5], true);
  prueba(r15[0], r15[1], r15[2], r15[3], r15[4], r15[5], true);
  prueba(r16[0], r16[1], r16[2], r16[3], r16[4], r16[5], true);
  prueba(r17[0], r17[1], r17[2], r17[3], r17[4], r17[5], true);
  prueba(r18[0], r18[1], r18[2], r18[3], r18[4], r18[5], true);
  prueba(r19[0], r19[1], r19[2], r19[3], r19[4], r19[5], true);
  prueba(r20[0], r20[1], r20[2], r20[3], r20[4], r20[5], true);
  prueba(r21[0], r21[1], r21[2], r21[3], r21[4], r21[5], true);
  prueba(r22[0], r22[1], r22[2], r22[3], r22[4], r22[5], true);
  prueba(r23[0], r23[1], r23[2], r23[3], r23[4], r23[5], true);
  prueba(r24[0], r24[1], r24[2], r24[3], r24[4], r24[5], true);
  prueba(r26[0], r26[1], r26[2], r26[3], r26[4], r26[5], true);
  prueba(r27a[0], r27a[1], r27a[2], r27a[3], r27a[4], r27a[5], true);
  prueba(r27b[0], r27b[1], r27b[2], r27b[3], r27b[4], r27b[5], true);
}

